r
n
p lst
p head
p *head
p List
p List<int>
call lst.print()
n

n
call lst.print()
r

n
call lst.print()
p lst.head->next

call lst.print()
p *lst.head->next

call lst.print()
(gdb) p &List<int>::print

p &List<int>::print
n
r
c
n
p lst
set pagination off
call (void)fflush(stdout)
call lst.print()
n

r
n
call lst.print()
call (void)fflush(stdout)

call lst.print()
set pagination off

call lst.print()
set pagination off

call (void)fflush(stdout)
b main
set pagination off
call (void)fflush(stdout)
r
n
call lst.print()
call (void)fflush(stdout)

n
call lst.print()
call (void)fflush(stdout)

clear
shell clear
call (void)fflush(stdout)
n
call (void)fflush(stdout)
n
call (void)fflush(stdout)
n
call (void)fflush(stdout)
shell clear
call (void)fflush(stdout)
fflush
help
call fflush(stdout)
q
b main
r
n
s
n
p *node_ptr
n
q
